

@model Facebook.WebUI.ViewModel.UserViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Facebook</title>
    @Styles.Render("~/Content/css")
    <style>
        .navbar-inverse {
            background-color: #4267b2;
        }
    </style>
</head>
<body>

    <div class="container">

        <div class="navbar navbar-inverse navbar-fixed-top">
            <div class="container">

                <div class="navbar-collapse collapse">

                    <ul class="nav navbar-nav navbar-left">
                        <li>@Html.ActionLink("Facebook", "Login", "Account")</li>
                    </ul>
                    <ul class="nav navbar-nav navbar-right">
                       
                        <li>@Html.ActionLink("Login", "Login", "Account")</li>
                    </ul>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-md-12" style="margin-left:200px; margin-top:50px;">


                <h3 style="margin-left:40px">Kayıt Ol</h3>
                <br /><br/>
                @using (Html.BeginForm("CreateAccount", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.UplodaName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input type="file" name="file" id="ImageUpload" />
                                <img id="imgpreview" src="#" />
                            </div>
                        </div>



                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Kayıt ol" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }
            </div>


        </div>

    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")


    <script>

        $(document).ready(function () {


            function readURL(input) {
                if (input.files && input.files[0]) {


                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $("img#imgpreview").attr("src", e.target.result)
                            .width(200)
                            .height(200);
                    }

                    reader.readAsDataURL(input.files[0]);

                }
            }

            $("#ImageUpload").change(function () {
                readURL(this);
            })

        })


    </script>
</body>
</html>
